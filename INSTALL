phpQLAdmin - Installation Guide
-------------------------------
$Id: INSTALL,v 2.10 2007-02-19 09:54:22 turbo Exp $

Software Requirements:
----------------------
- Qmail-LDAP (this is not required to get phpQLAdmin working, but why use
  phpQLAdmin w/o Qmail-LDAP ? :). There is fundamental support (i.e. phpQLAdmin
  API supports this) to use phpQLAdmin with for example Sendmail/LDAP etc. This
  have to be fully tested and verified - patches will be greatfully accepted!
- LDAP server with support for "qmailUser" objectclass (tested with OpenLDAP 1.2.11)
  If using another MTA than Qmail-LDAP, then files in include/config_* needs to
  be modified accordingly.
- Webserver that can run embedded PHP code (tested with Apache 1.3.14 and 2.2.9)

PHP Requirenments:
------------------
- PHP 4.0.x (tested with PHP 4.0.4pl and 5.2.6)
- Compiled in LDAP support

PHP additionals (nice-to-have-features):
---------------------------------------
- Compiled in JPEG, GIF or (preferably) PNG support.
- Compiled in mhash-library (to support MD5 and SHA password encryption)
- Compiled in IDN support (http://php-idn.bayour.com)
- Compiled in KRB5 support 
- Compiled in memcache (http://pecl.php.net/package/memcache)

Additional Requirements for Qmail-LDAP/Controls patch support:
-------------------------------------------------------------
- LDAP server with support for "qmailControl" objectclass
  The "qmailControl" objectclass must contain all attributes which
  you want to administrate trough phpQLAdmin. This schema definition
  can be found in 'schemas/qmailControl.schema'.
- LDAP server with support for the "sambaSamAccount" objectclass
  (see doc/README.samba for more information).

Install:
--------
1. Untar the distribution (tar -zxf phpQLAdmin-x.x.x.tgz) to a directory
   below webserver's root.
   OR, if using the GIT version, do a 'git clone' in such a directory.

2. Copy the file 'include/config.inc.CHANGE_ME' to 'include/config.inc'
   and edit config.inc. Change the properties needed to access your
   LDAP database (have a look at the configuration section in the
   documentation)

3. Add the 'userReference', 'useUserMailInformation' and 'administrator'
   attributes to the LDAP database - as described in the doc/README file.

4. Configure your webserver to answer to PHP calls, setup a directory
   configuration and alias for the URL you want phpQLAdmin.

5. Setup the ACI/ACL in your LDAP database to allow you to read and
   write to the database.
   + Lack of access is the most common problem with using phpQLAdmin!
     It (phpQLAdmin) will NOT try to limit you in any way. It will
     show only what it (i.e. your credentials) is allowed to view,
     and write anything. If you don't have the sufficient access,
     the _LDAP Server_ will stop you.
     So if you have problems seeing anything/not what you expect,
     try a ACL such as 'access to * by * read', and see if you
     get luckier.
     PS: Do NOT (!!!) run like this for any length of time, just long
     	 enough to verify that the problem is with ACLs/ACIs!

6. Point your webbrowser to the phpQLAdmin page and login with your
   name/userid and password.

7. Setup phpQLAdmin by choosing 'Advanced mode' in the left frame
   and click on the 'phpQLAdmin Configuration' link. There's three
   types of configuration - Global, User Templates and Branch.

8. Try it out and report bugs :)

Also read the doc/README* files for more information...
