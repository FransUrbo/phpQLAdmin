<?php
// control attribute plugin for
// rcpthosts (blocked local addresses)
//
// $Id: attrib.control.rcpthosts.inc,v 2.31.2.1 2006-03-23 09:13:15 turbo Exp $

// {{{ rcpthosts_check(type)
function rcpthosts_check($type) {
    global $LANG;

    // check validity
    if(@is_array($_REQUEST["rcpthosts"])) {
		foreach($_REQUEST["rcpthosts"] as $key => $host) {
			if(empty($host))
			  continue;
			
			if(!pql_check_hostaddress($host)) {
				$error[pql_get_define("PQL_ATTR_RCPTHOSTS")."_".$key] = $LANG->_('Invalid');
				$is_error = true;
			}
		} // end foreach
    } // end if is_array
	
    if($is_error)
	  return false;
    
    return true;
}
// }}}

// {{{ rcpthosts_init(host)
// init values
function rcpthosts_init($host) {
    global $_pql_control;

    // fetch data from ldap server
    $_REQUEST["rcpthosts"] = pql_get_attribute($_pql_control->ldap_linkid,
											   pql_get_define("PQL_ATTR_CN")."=$host,".$_SESSION["USER_SEARCH_DN_CTR"],
											   pql_get_define("PQL_ATTR_RCPTHOSTS"));

    if(!@$_REQUEST["rcpthosts"])
	  return true;
	elseif(!@is_array($_REQUEST["rcpthosts"]))
	  $_REQUEST["rcpthosts"] = array($_REQUEST["rcpthosts"]);
}
// }}}


// {{{ rcpthosts_print_view(host)
function rcpthosts_print_view($host) {
    global $_pql_control, $LANG;
    
    // init data
    rcpthosts_init($host);

	$_REQUEST["rootdn"] = pql_get_rootdn(pql_get_define("PQL_ATTR_CN")."=$host,".$_SESSION["USER_SEARCH_DN_CTR"]);
?>
  <table cellspacing="0" cellpadding="3" border="0">
    <th align="left" colspan="3"><?=pql_complete_constant($LANG->_('Allowed %attrib% for host %host%'), array('host' => $host, 'attrib' => pql_get_define("PQL_ATTR_RCPTHOSTS")))?>
      <tr>
        <td class="title" colspan="3"><?=$LANG->_('Domains accepted by mail server')?></td>
      </tr>

<?php
	$class   = pql_format_table(0);
	$url_tmp = "control_edit_attribute.php?mxhost=$host&attrib=".pql_get_define("PQL_ATTR_RCPTHOSTS");

	$tbl_txt = array('tit' => $LANG->_('Domains'), 'add' => $LANG->_('Add domain'), 'del' => $LANG->_('Remove domain'));
	$tbl_url = array('add' => $url_tmp.'&type=add', 'del' => $url_tmp.'&type=del&submit=1');
	pql_format_table_single($_pql_control->ldap_linkid, $tbl_txt, $tbl_url, $_REQUEST["rcpthosts"],
							pql_get_define("PQL_ATTR_RCPTHOSTS"), $class);
?>
      <tr class="subtitle">
        <td colspan="3">
          <table cellspacing="0" cellpadding="3" border="0">
            <tr>
              <td><img src="images/info.png" width="16" height="16" border="0"></td>
              <td>These values will be automatically generated by phpQLAdmin, and cannot be edited.<br>If you want to do it by yourself eg. to control more than one QmailLDAP server,<br>disable '<i>Automatically replicate domains to rcpthosts</i>' in the configuration.</td>
            </tr>

            <tr>
<?php if(pql_get_define("PQL_CONF_CONTROL_AUTOADDRCPTHOSTS", $_REQUEST["rootdn"])) { ?>
              <td><img src="images/edit.png" width="12" height="12" border="0" alt="replicate"></td>
              <td><a href="control_edit_attribute.php?rootdn=<?=$_REQUEST["rootdn"]?>&attrib=<?=pql_get_define("PQL_ATTR_RCPTHOSTS")?>&type=replicate&mxhost=<?=$host?>&submit=1"><?=$LANG->_('Click here to start replication manually')?></a></td>
<?php } else { ?>
              <td><img src="images/info.png" width="16" height="16" border="0"></td>
              <td><a href="control_edit_attribute.php?rootdn=<?=$_REQUEST["rootdn"]?>&attrib=<?=pql_get_define("PQL_ATTR_RCPTHOSTS")?>&mxhost=<?=$host?>&view=hosts"><?=$LANG->_('Change options')?></a> (<?=$LANG->_('The automatic replication with domain is disabled')?>)</td>
<?php } ?>
            </tr>
          </table>
        </td>
      </tr>
    </th>
  </table>
<?php
}
// }}}

// {{{ rcpthosts_print_form(void)
function rcpthosts_print_form() {
    global $error, $LANG;
?>
  <form action="<?=$_SERVER["PHP_SELF"]?>" method="post">
    <table cellspacing="0" cellpadding="3" border="0">
      <th colspan="3" align="left"><?=pql_complete_constant($LANG->_('Add %what%'), array('what' => $LANG->_('domain')))?>:</th>
        <tr class="<?php pql_format_table(); ?>">
          <td><input type="text" name="set" size="30"></td>
        </tr>
      </th>
    </table>

    <input type="hidden" name="submit" value="1">
    <input type="hidden" name="attrib" value="<?=$_REQUEST["attrib"]?>">
    <input type="hidden" name="mxhost" value="<?=$_REQUEST["mxhost"]?>">
    <input type="hidden" name="rootdn" value="<?=$_REQUEST["rootdn"]?>">
    <input type="hidden" name="view"   value="<?=$_REQUEST["view"]?>">
    <input type="hidden" name="type"   value="<?=$_REQUEST["type"]?>">
    <br>
    <input type="submit" value="<?=$LANG->_('Save')?>">
  </form>
<?php
}
// }}}

// {{{ rcpthosts_save(type, host)
function rcpthosts_save($type, $host) {
    global $_pql_control, $LANG;

	if(!$host) {
	  if(@$_REQUEST["mxhost"])
		$host = $_REQUEST["mxhost"];
	  elseif(@$_REQUEST["set"])
		$host = $_REQUEST["set"];
	  else
		die("NO HOST!?!?");
	}

    switch($type) {
	  // {{{ Start replication manually
      case "replicate":
		if(pql_control_update_domains($_pql_control, $_REQUEST["rootdn"],
									  pql_get_define("PQL_ATTR_CN")."=$host,".$_SESSION["USER_SEARCH_DN_CTR"],
									  $host, '', pql_get_define("PQL_ATTR_RCPTHOSTS")))
		  $msg = pql_complete_constant($LANG->_('Successfully replicated %what%'),
									   array('what' => pql_get_define("PQL_ATTR_RCPTHOSTS")));
		else {
		  pql_format_error();
		  $msg = pql_complete_constant($LANG->_('Failed to replicate %what%'),
									   array('what' => pql_get_define("PQL_ATTR_RCPTHOSTS")));
		}
	
		attribute_forward($msg);
		break;
		// }}}

	  // {{{ Delete entry
      case "del":
		// remove specified domain from rcpthosts in host object
		if(pql_modify_attribute($_pql_control->ldap_linkid,
								pql_get_define("PQL_ATTR_CN")."=$host,".$_SESSION["USER_SEARCH_DN_CTR"],
								pql_get_define("PQL_ATTR_RCPTHOSTS"), $host, ''))
		  $msg = pql_complete_constant($LANG->_('Successfully removed %domain% from %what%'),
									   array('what'   => pql_get_define("PQL_ATTR_RCPTHOSTS"),
											 'domain' => $host));
		else {
		  pql_format_error();
		  $msg = pql_complete_constant($LANG->_('Failed to remove %domain% from %what%'),
									   array('what'   => pql_get_define("PQL_ATTR_RCPTHOSTS"),
											 'domain' => $host));
		}

		attribute_forward($msg);
		break;
		// }}}

	  // {{{ Add entry
      case "add":
		// adding specified domain to rcpthosts in host object
		if(pql_modify_attribute($_pql_control->ldap_linkid,
								pql_get_define("PQL_ATTR_CN")."=$host,".$_SESSION["USER_SEARCH_DN_CTR"],
								$_REQUEST["attrib"], '', $host))
		  $msg = pql_complete_constant($LANG->_('Successfully added %domain% to %value% %what%'),
									   array('what'   => $_REQUEST["attrib"],
											 'domain' => $host));
		else {
		  pql_format_error();
		  $msg = pql_complete_constant($LANG->_('Failed adding %domain% to %value% %what%'),
									   array('what'   => $_REQUEST["attrib"],
											 'domain' => $_REQUEST["set"]));
		}

		attribute_forward($msg);
		break;
		// }}}

	  // {{{ Default
      default:
		die(pql_complete_constant($LANG->_('Unknown save type %type% in file %file%, function save()'),
								  array('type' => $type, 'file' => __FILE__)));
		// }}}
    }
}
// }}}


// {{{ rcpthosts_help(void)
function rcpthosts_help() {
	global $LANG;
?>
Allowed RCPT domains.  If rcpthosts is supplied,
qmail-smtpd will reject any envelope recipient address
with a domain not listed in rcpthosts.
<br>
Exception:  If the environment variable RELAYCLIENT is
set, qmail-smtpd will ignore rcpthosts, and will append
the value of RELAYCLIENT to each incoming recipient
address.
<br><br>
rcpthosts may include wildcards:
<br><br>
		heaven.af.mil<br>
		.heaven.af.mil<br>
<br>
Envelope recipient addresses without @ signs are always
allowed through.
<?php
}
// }}}

// {{{ rcpthosts_help_cr(void)
function rcpthosts_help_cr() {
	global $LANG;
	echo $LANG->_('Help text taken from qmail man pages');
}
// }}}

// Local variables:
// mode: php
// mode: font-lock
// tab-width: 4
// End:
?>

