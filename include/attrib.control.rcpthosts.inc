<?php
// control attribute plugin for
// rcpthosts (blocked local addresses)
//
// $Id: attrib.control.rcpthosts.inc,v 2.15 2003-07-02 07:59:00 turbo Exp $

function rcpthosts_check($type) {
    global $error, $rcpthosts, $domain, $rootdn, $view, $LANG;

    // check validity
    if(is_array($rcpthosts)) {
		foreach($rcpthosts as $key => $host) {
			if($host == "")
			  continue;
			
			if(!check_hostaddress($host)) {
				$error["rcpthosts_$key"] = $LANG->_('Invalid');
				$is_error = true;
			}
		} // end foreach
    } // end if is_array
	
    if($is_error)
	  return false;
    
    return true;
}

// init values
function rcpthosts_init($host) {
    global $_pql_control, $rcpthosts, $domain, $rootdn, $view;

    // fetch data from ldap server
    $rcpthosts = pql_control_get_attribute($_pql_control->ldap_linkid,
										   "cn=" . $host . "," . $GLOBALS["USER_SEARCH_DN_CTR"],
										   "rcpthosts");
    
    if(is_null($rcpthosts))
	  return true;
}

function rcpthosts_print_view($host) {
    global $_pql_control, $rcpthosts, $view, $LANG;
    
    // init data
    rcpthosts_init($host);
?>
  <table cellspacing="0" cellpadding="3" border="0">
    <th align="left"><?php echo pql_complete_constant($LANG->_('Allowed rcpt hosts for host %host%'), array('host' => $host)); ?></th>
      <tr class="title"><td><?=$LANG->_('Domain')?></td></tr>
<?php if(!is_array($rcpthosts)) { ?>
      <tr class="<?php table_bgcolor(); ?>"><td><?=$LANG->_('No rcpthosts defined')?></td></tr>
<?php } else {
		asort($rcpthosts);
		foreach($rcpthosts as $rcpt) {
?>
      <tr class="<?php table_bgcolor(); ?>"><td><?=$rcpt?></td></tr>
<?php   } // end foreach
    } // end if is_array

    if(pql_get_define("PQL_GLOB_CONTROL_AUTOADDRCPTHOSTS")) {
?>
      <tr class="subtitle">
        <td><a href="control_edit_attribute.php?attrib=rcpthosts&type=replicate&mxhost=<?=$host?>&submit=1"><img src="images/edit.png" width="12" height="12" border="0" alt="replicate"><?=$LANG->_('Click here to start replication manually')?></a></td>
      </tr>

      <br>

      <tr class="subtitle">
        <td>
          <table cellspacing="0" cellpadding="3" border="0">
            <tr>
              <td><img src="images/info.png" width="16" height="16" border="0"></td>
              <td>These values will be automatically generated by phpQLAdmin, and cannot be edited.<br>If you want to do it by yourself eg. to control more than one qmail-ldap server,<br>disable PQL_GLOB_CONTROL_AUTOADDRCPTHOSTS in the config file.</td>
            </tr>
          </table>
        </td>
      </tr>
<?php } else { ?>
      <tr class="subtitle">
        <td><a href="control_edit_attribute.php?attrib=rcpthosts&mxhost=<?=$host?>"><img src="images/edit.png" width="12" height="12" border="0"><?=$LANG->_('Change options')?></a> (<?=$LANG->_('The automatic replication with domain is disabled')?>)</td>
      </tr>
    </th>
<?php }	?>
  </table>
<?php
}

function rcpthosts_print_form() {
    global $attrib, $PHP_SELF, $error, $rcpthosts, $mxhost, $domain, $rootdn, $view, $LANG;
?>
  <form action="<?=$PHP_SELF?>" method="post">
    <table cellspacing="0" cellpadding="3" border="0">
      <th colspan="3" align="left"><?php echo pql_complete_constant($LANG->_('Add %what%'), array('what' => $LANG->_('domain'))); ?>:</th>
        <tr class="<?php table_bgcolor(); ?>">
          <td><input type="text" name="set" size="30"></td>
        </tr>
      </th>
    </table>

    <input type="hidden" name="submit" value="1">
    <input type="hidden" name="attrib" value="<?=$attrib?>">
    <input type="hidden" name="mxhost" value="<?=$mxhost?>">
    <input type="hidden" name="domain" value="<?=$domain?>">
    <input type="hidden" name="rootdn" value="<?=$rootdn?>">
    <input type="hidden" name="view"   value="<?=$view?>">
    <br>
    <input type="submit" value="<?=$LANG->_('Save')?>">
  </form>
<?php
}

function rcpthosts_save($type, $host) {
    global $_pql_control, $attrib, $rcpthosts, $set, $error, $rootdn, $domain, $view, $LANG;

	if(!$host) {
		// Get all QmailLDAP/Controls hosts
		$hosts = pql_control_get_hosts($_pql_control->ldap_linkid, $GLOBALS["USER_SEARCH_DN_CTR"]);
		if(is_array($hosts)) {
			if($type == 'add')
			  $modify_host = 1; // Add domain to host
			else
			  $modify_host = 0; // Don't remove the domain from the host

			foreach($hosts as $host) {
				// Get rcpthosts in each of the hosts
				$rcpthosts = pql_control_get_attribute($_pql_control->ldap_linkid,
													   "cn=" . $host . "," . $GLOBALS["USER_SEARCH_DN_CTR"],
													   "rcpthosts");
				if(is_array($rcpthosts)) {
					foreach($rcpthosts as $rcpt) {
						// In the RCPTHosts configured for the host, do we have what we're looking for?
						if($rcpt == $set)
						  if($type == 'add')
							$modify_host = 0; // The domain exists, don't add
						  else
							$modify_host = 1; // The domain exists, remove it
					}
				}

				if($modify_host)
				  $HOSTS[] = $host;
			}
		}
	} else
	  $HOSTS[] = $host;

	if($HOSTS[1])
	  // We have more than one host
	  $all = ' all';

    switch($type) {
      case "replicate":
		// start replication manually
		if(pql_control_update_domains($_pql_control, "cn=$host,".$GLOBALS["USER_SEARCH_DN_CTR"], $host, '', 'rcpthosts'))
		  $msg = pql_complete_constant($LANG->_('Successfully replicated %what%'),
									   array('what' => 'rcpthosts'));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to replicate %what%'),
									   array('what' => 'rcpthosts')) . ": " . pql_ldap_error($_pql_control->ldap_linkid);
	
		attribute_forward($msg);
		break;

      case "del":
		// delete entry
		foreach($HOSTS as $host) {
			// remove specified domain from rcpthosts in host object
			if(pql_control_remove_attribute($_pql_control->ldap_linkid,
											"cn=" . $host . "," . $GLOBALS["USER_SEARCH_DN_CTR"],
											"rcpthosts", $set))
			  $msg = pql_complete_constant($LANG->_('Successfully removed %domain% from %what%'),
										   array('what'   => 'rcpthosts', 'domain' => $set));
			else
			  $msg = pql_complete_constant($LANG->_('Failed to remove %domain% from %what%'),
										   array('what'   => 'rcpthosts', 'domain' => $set))
				. ": " . pql_ldap_error($_pql_control->ldap_linkid);
		}
		break;

      case "add":
		// add entry
		foreach($HOSTS as $host) {
			// adding specified domain to rcpthosts in host object
			if(pql_control_add_attribute($_pql_control->ldap_linkid,
										 "cn=" . $host . "," . $GLOBALS["USER_SEARCH_DN_CTR"],
										 "rcpthosts", $set))
			  $msg = pql_complete_constant($LANG->_('Successfully added %domain% to %value %what%'),
										   array('what' => 'rcpthosts', 'domain' => $set, 'value' => $all));
			else
			  $msg = pql_complete_constant($LANG->_('Failed adding %domain% to %value% %what%'),
										   array('what' => 'rcpthosts', 'domain' => $set, 'value' => $all))
				. ": " . pql_ldap_error($_pql_control->ldap_linkid);
		}
		break;

      default:
		die(pql_complete_constant($LANG->_('Unknown save type %type% in file %file%, function save()'),
								  array('type' => $type, 'file' => __FILE__)));
    }
		
	if($msg)
	  // redirect back to host details
	  attribute_forward($msg);
}

function rcpthosts_help() {
	global $LANG;
?>
Allowed RCPT domains.  If rcpthosts is supplied,
qmail-smtpd will reject any envelope recipient address
with a domain not listed in rcpthosts.
<br>
Exception:  If the environment variable RELAYCLIENT is
set, qmail-smtpd will ignore rcpthosts, and will append
the value of RELAYCLIENT to each incoming recipient
address.
<br><br>
rcpthosts may include wildcards:
<br><br>
		heaven.af.mil<br>
		.heaven.af.mil<br>
<br>
Envelope recipient addresses without @ signs are always
allowed through.
<?php
}

function rcpthosts_help_cr() {
	global $LANG;
	echo $LANG->_('Help text taken from qmail man pages');
}

// Local variables:
// mode: php
// mode: font-lock
// tab-width: 4
// End:
?>

