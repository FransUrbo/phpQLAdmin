<?php
// control attribute plugin for
// locals (which domains should be treated as locals)
//
// $Id: attrib.control.locals.inc,v 2.42 2007-02-15 12:07:35 turbo Exp $

// {{{ locals_check(type)
function locals_check($type) {
    global $LANG;

    // check validity
    if(@is_array($_REQUEST["locals"])) {
		foreach($_REQUEST["locals"] as $key => $host) {
			if(!empty($host))
			  continue;
			
			if(!pql_check_hostaddress($host)) {
				$error[pql_get_define("PQL_ATTR_LOCALS")."_".$key] = $LANG->_('Invalid');
				$is_error = true;
			}
			
		} // end foreach
    } // end if is_array
	
    if($is_error)
	  return false;
    
    return true;
}

// }}}

// {{{ locals_init(host)
// init values
function locals_init($host) {
    global $_pql_control;
    
    // fetch data from ldap server
	if($host == "Global")
	  $_REQUEST["locals"] = $_pql_control->get_attribute($_SESSION["USER_SEARCH_DN_CTR"],
											  pql_get_define("PQL_ATTR_LOCALS"), 0, pql_get_define("PQL_ATTR_CN")."=*");
	else
	  $_REQUEST["locals"] = $_pql_control->get_attribute($host, pql_get_define("PQL_ATTR_LOCALS"));
    
    if(!@$_REQUEST["locals"])
	  return true;
	elseif(!@is_array($_REQUEST["locals"]))
	  $_REQUEST["locals"] = array($_REQUEST["locals"]);
}
// }}}


// {{{ locals_print_view(host)
function locals_print_view($host) {
    global $_pql_control, $LANG;
    
    // init data
    locals_init($host);

	// init data
	$_REQUEST["rootdn"] = pql_get_rootdn($host);
	$cn = $_pql_control->get_attribute($host, pql_get_define("PQL_ATTR_CN"));
?>
  <table cellspacing="0" cellpadding="3" border="0">
    <th align="left" colspan="3"><?php echo pql_complete_constant($LANG->_('Allowed %attrib% for host %host%'), array('host' => $cn, 'attrib' => pql_get_define("PQL_ATTR_LOCALS")))?>
      <tr>
        <td class="title" colspan="3"><?php echo $LANG->_('Mails accepted as local by mail server')?></td>
      </tr>

<?php
	$class   = pql_format_table(0);
	$url_tmp = "control_edit_attribute.php?mxhost=$host&attrib=".pql_get_define("PQL_ATTR_LOCALS");

	$tbl_txt = array('tit' => $LANG->_('Domains'), 'add' => $LANG->_('Add domain'), 'del' => $LANG->_('Remove domain'));
	$tbl_url = array('add' => $url_tmp.'&type=add', 'del' => $url_tmp.'&type=del&submit=1');
	pql_format_table_single( $tbl_txt, $tbl_url, $_REQUEST["locals"],
							pql_get_define("PQL_ATTR_LOCALS"), $class);
?>

      <tr class="subtitle">
        <td colspan="3">
          <table cellspacing="0" cellpadding="3" border="0">
            <tr>
              <td><img src="images/info.png" width="16" height="16" border="0"></td>
              <td>These values will be automatically generated by phpQLAdmin, and cannot be edited.<br>If you want to do it by yourself eg. to control more than one QmailLDAP server,<br>disable '<i>Automatically replicate domains to locals</i>' in the config file.</td>
            </tr>

            <tr>
<?php if(pql_get_define("PQL_CONF_CONTROL_AUTOADDLOCALS", $_REQUEST["rootdn"])) { ?>
              <td><img src="images/edit.png" width="12" height="12" border="0" alt="replicate"></td>
              <td><a href="control_edit_attribute.php?rootdn=<?php echo $_REQUEST["rootdn"]?>&attrib=<?=pql_get_define("PQL_ATTR_LOCALS")?>&type=replicate&mxhost=<?=$host?>&submit=1"><?=$LANG->_('Click here to start replication manually')?></a></td>
<?php } else { ?>
              <td><img src="images/info.png" width="16" height="16" border="0"></td>
              <td><?php echo $LANG->_('The automatic replication with domain is \bdisabled\B')?></td>
<?php }	?>
            </tr>
          </table>
        </td>
      </tr>
    </th>
  </table>
<?php
}
// }}}

// {{{ locals_print_form(void)
function locals_print_form() {
	global $LANG;
    
    // if automatic replication is enabled, don't display form
// BUG?
//    if(pql_get_define("PQL_CONF_CONTROL_AUTOADDLOCALS", $_REQUEST["rootdn"])) {
//		return false;
//    }
?>
  <form action="<?php echo $_SERVER["PHP_SELF"]?>" method="post">
    <table cellspacing="0" cellpadding="3" border="0">
      <th colspan="3" align="left"><?php echo pql_complete_constant($LANG->_('Add %what%'), array('what' => $LANG->_('domain'))); ?>
        <tr class="<?php pql_format_table(); ?>">
          <td><input type="text" name="set" size="30"></td>
        </tr>
      </th>
    </table>

    <input type="hidden" name="submit" value="1">
    <input type="hidden" name="attrib" value="<?php echo $_REQUEST["attrib"]?>">
    <input type="hidden" name="mxhost" value="<?php echo $_REQUEST["mxhost"]?>">
    <input type="hidden" name="rootdn" value="<?php echo $_REQUEST["rootdn"]?>">
    <input type="hidden" name="view"   value="<?php echo $_REQUEST["view"]?>">
    <input type="hidden" name="type"   value="<?php echo $_REQUEST["type"]?>">
    <br>
    <input type="submit" value="<?php echo $LANG->_('Save')?>">
  </form>
<?php
}
// }}}

// {{{ locals_save(type, host)
function locals_save($type, $host) {
    global $_pql, $_pql_control, $LANG;
	$success = 0;

	if(!$host) {
	  if(@$_REQUEST["mxhost"])
		$host = $_REQUEST["mxhost"];
	  elseif(@$_REQUEST["set"])
		$host = $_REQUEST["set"];
	}

	if(!$host)
	  die("NO HOST!?!?");

    switch($type) {
      case "replicate":
		// {{{ Start replication manually
		if(pql_control_update_domains($_REQUEST["rootdn"], $host, $host, '', pql_get_define("PQL_ATTR_LOCALS")))
		  $msg = pql_complete_constant($LANG->_('Successfully replicated %what%'),
									   array('what' => pql_get_define("PQL_ATTR_LOCALS")));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to replicate %what%'),
									   array('what' => pql_get_define("PQL_ATTR_LOCALS"))).": ".pql_format_error(0);
	
		attribute_forward($msg);
		break;
		// }}}

      case "del":
		// {{{ remove specified domain from locals in host object
		if(pql_modify_attribute($host,
								pql_get_define("PQL_ATTR_LOCALS"), $host, ''))
		  $msg = pql_complete_constant($LANG->_('Successfully removed %domain% from %what%'),
									   array('what'   => pql_get_define("PQL_ATTR_LOCALS"),
											 'domain' => $$host));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to remove %domain% from %what%'),
									   array('what'   => pql_get_define("PQL_ATTR_LOCALS"),
											 'domain' => $host)) . ": " . pql_format_error(0);
		
		attribute_forward($msg);
		break;
		// }}}

      case "add":
		// {{{ adding specified domain to locals in host object
		if($host == "Global") {
		  // Get all QLC host
		  $qlcs = $_pql_control->get_dn($_SESSION["USER_SEARCH_DN_CTR"],
							 '(&(cn=*)(objectclass=qmailControl))');
		  
		  $success = 1;
		  foreach($qlcs as $host) {
			if(!pql_modify_attribute($host,
									 $_REQUEST["attrib"], '', $_REQUEST["set"]))
			  $success = 0;
		  }
		} else {
		  if(pql_modify_attribute($host,
								  $_REQUEST["attrib"], '', $_REQUEST["set"]))
			$success = 1;
		}

		if($success)
		  $msg = pql_complete_constant($LANG->_('Successfully added %domain% to %what%'),
									   array('what'   => pql_get_define("PQL_ATTR_LOCALS"),
											 'domain' => $host));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to add %domain% to %what%'),
									   array('what'   => pql_get_define("PQL_ATTR_LOCALS"),
											 'domain' => $host)) . ": " . pql_format_error(0);
		
		attribute_forward($msg);
		break;
		// }}}

      default:
		die(pql_complete_constant($LANG->_('Unknown save type %type% in file %file%, function save()'),
								  array('type' => $type, 'file' => __FILE__)));
    }
}

// }}}


// {{{ locals_help(void)
function locals_help() {
	global $LANG;
?>
List of domain names that the current host receives
mail for, one per line.  Default:  me, if that is
supplied; otherwise qmail-send refuses to run.  An
address user@domain is considered local if domain is
listed in locals.
<?php
}
// }}}

// {{{ locals_help_cr(void)
function locals_help_cr() {
	global $LANG;
	echo $LANG->_('Help text taken from qmail man pages');
}
// }}}

// Local variables:
// mode: php
// mode: font-lock
// tab-width: 4
// End:
?>
