<?php
// control attribute plugin for
// locals (which domains should be treated as locals)
//
// $Id: attrib.control.locals.inc,v 2.21.2.1 2003-12-09 16:18:25 dlw Exp $

function locals_check($type) {
    global $error, $locals, $rootdn, $domain, $view, $LANG;
    
    // check validity
    if(is_array($locals)) {
		foreach($locals as $key => $host) {
			if($host == "")
			  continue;
			
			if(!pql_check_hostaddress($host)) {
				$error[pql_get_define("PQL_GLOB_ATTR_LOCALS")."_".$key] = $LANG->_('Invalid');
				$is_error = true;
			}
			
		} // end foreach
    } // end if is_array
	
    if($is_error)
	  return false;
    
    return true;
}

// init values
function locals_init($host) {
    global $_pql_control, $locals, $view;
    
    // fetch data from ldap server
    $locals = pql_control_get_attribute($_pql_control->ldap_linkid,
										pql_get_define("PQL_GLOB_ATTR_CN")."=" . $host . "," . $_SESSION["USER_SEARCH_DN_CTR"],
										pql_get_define("PQL_GLOB_ATTR_LOCALS"));
    
    if(is_null($locals))
	  return true;
}

function locals_print_view($host) {
    global $_pql_control, $locals, $view, $LANG;
    
    // init data
    locals_init($host);
?>
  <table cellspacing="0" cellpadding="3" border="0">
    <th align="left"><?php echo pql_get_define("PQL_GLOB_ATTR_LOCALS");?> (Defined <?php echo pql_get_define("PQL_GLOB_ATTR_LOCALS");?>) for host <u><?=$host?></u></th>
      <tr class="title"><td><?=$LANG->_('Domain')?></td></tr>
<?php
    if(!is_array($locals)) {
?>
      <tr class="<?php pql_format_table(); ?>"><td><?=$LANG->_('Not set')?></td></tr>
<?php
    } else {
		asort($locals);
		foreach($locals as $localdomain) {
?>
      <tr class="<?php pql_format_table(); ?>"><td><?=$localdomain?></td></tr>
<?php
        } // end foreach
    } // end if is_array

    if(pql_get_define("PQL_GLOB_CONTROL_AUTOADDLOCALS")) {
?>
      <tr class="subtitle">
        <td><a href="control_edit_attribute.php?attrib=<?php echo pql_get_define("PQL_GLOB_ATTR_LOCALS")?>&type=replicate&mxhost=<?=$host?>&submit=1"><img src="images/edit.png" width="12" height="12" border="0" alt="replicate"><?=$LANG->_('Click here to start replication manually')?></a></td>
      </tr>

      <br>

      <tr class="subtitle">
        <td>
          <table cellspacing="0" cellpadding="3" border="0">
            <tr>
              <td><img src="images/info.png" width="16" height="16" border="0"></td>
              <td>These values will be automatically generated by phpQLAdmin, and cannot be edited.<br>If you want to do it by yourself eg. to control more than one QmailLDAP server,<br>disable PQL_GLOB_CONTROL_AUTOADDLOCALS in the config file.</td>
            </tr>
          </table>
        </td>
      </tr>
  <?php
    } else {
  ?>
      <tr class="subtitle">
        <td><a href="control_edit_attribute.php?attrib=<?php echo pql_get_define("PQL_GLOB_ATTR_LOCALS")?>&mxhost=<?=$host?>"><img src="images/edit.png" width="12" height="12" border="0"><?=$LANG->_('Change options')?></a> (<?=$LANG->_('The automatic replication with domain is disabled')?>)</td>
      </tr>
    </th>
<?php }	?>
  </table>
<?php
}

function locals_print_form() {
    global $attrib, $PHP_SELF, $error, $locals, $mxhost, $view, $LANG;
    
    // if automatic replication is enabled, don't display form
// BUG?
//    if(pql_get_define("PQL_GLOB_CONTROL_AUTOADDLOCALS")) {
//		return false;
//    }
?>
  <form action="<?=$PHP_SELF?>" method="post">
    <table cellspacing="0" cellpadding="3" border="0">
      <th colspan="3" align="left"><?php echo pql_complete_constant($LANG->_('Add %what%'), array('what' => $LANG->_('domain'))); ?></th>
        <tr class="<?php pql_format_table(); ?>">
          <td><input type="text" name="set" size="30"></td>
        </tr>
      </th>
    </table>

    <input type="hidden" name="submit" value="1">
    <input type="hidden" name="attrib" value="<?=$attrib?>">
    <input type="hidden" name="mxhost" value="<?=$mxhost?>">
    <input type="hidden" name="view"   value="<?=$view?>">
    <br>
    <input type="submit" value="<?=$LANG->_('Save')?>">
  </form>
<?php
}

function locals_save($type, $host) {
    global $_pql, $_pql_control, $attrib, $locals, $set, $error, $rootdn, $domain, $mxhost, $view, $LANG;

	if($mxhost)
	  $host = $mxhost;
	else
	  $host = '*';

    switch($type) {
      case "replicate":
		// start replication manually

		if(pql_control_update_domains($_pql_control, pql_get_define("PQL_GLOB_ATTR_CN")."=$host,".$_SESSION["USER_SEARCH_DN_CTR"], $host, '', pql_get_define("PQL_GLOB_ATTR_LOCALS")))
		  $msg = pql_complete_constant($LANG->_('Successfully replicated %what%'),
									   array('what' => pql_get_define("PQL_GLOB_ATTR_LOCALS")));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to replicate %what%'),
									   array('what' => pql_get_define("PQL_GLOB_ATTR_LOCALS"))).": ".pql_ldap_error($_pql_control->ldap_linkid);
	
		attribute_forward($msg);
		break;

      case "del":
		// remove specified domain from locals, redirect back to host details
		if(pql_control_update_domains($_pql_control, $_SESSION["USER_SEARCH_DN_CTR"],
									  $host, array($set, ''), pql_get_define("PQL_GLOB_ATTR_LOCALS")))
		  $msg = pql_complete_constant($LANG->_('Successfully removed %domain% from %what%'),
									   array('what'   => pql_get_define("PQL_GLOB_ATTR_LOCALS"),
											 'domain' => $set));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to remove %domain% from %what%'),
									   array('what'   => pql_get_define("PQL_GLOB_ATTR_LOCALS"),
											 'domain' => $set)) . ": " . pql_ldap_error($_pql_control->ldap_linkid);
		
		attribute_forward($msg);
		break;

      case "add":
		// adding specified domain to rcpthosts, redirect back to domain details
		$success = 0;
		if($mxhost) {
			if(pql_control_update_domains($_pql_control, pql_get_define("PQL_GLOB_ATTR_CN")."=$mxhost,".$_SESSION["USER_SEARCH_DN_CTR"],
										  $host, array('', $set), pql_get_define("PQL_GLOB_ATTR_LOCALS")))
			  $success = 1;
		} else {
			if(pql_control_update_domains($_pql_control, $_SESSION["USER_SEARCH_DN_CTR"],
										  '*', array('', $set), pql_get_define("PQL_GLOB_ATTR_LOCALS")))
			  $success = 1;
		}

		if($success)
		  $msg = pql_complete_constant($LANG->_('Successfully added %domain% to %what%'),
									   array('what'   => pql_get_define("PQL_GLOB_ATTR_LOCALS"),
											 'domain' => $set));
		else
		  $msg = pql_complete_constant($LANG->_('Failed to add %domain% to %what%'),
									   array('what'   => pql_get_define("PQL_GLOB_ATTR_LOCALS"),
											 'domain' => $set))
			. ": " . pql_ldap_error($_pql_control->ldap_linkid);
		
		attribute_forward($msg);
		break;

      default:
		die(pql_complete_constant($LANG->_('Unknown save type %type% in file %file%, function save()'),
								  array('type' => $type, 'file' => __FILE__)));
    }
}

function locals_help() {
	global $LANG;
?>
List of domain names that the current host receives
mail for, one per line.  Default:  me, if that is
supplied; otherwise qmail-send refuses to run.  An
address user@domain is considered local if domain is
listed in locals.
<?php
}

function locals_help_cr() {
	global $LANG;
	echo $LANG->_('Help text taken from qmail man pages');
}

// Local variables:
// mode: php
// mode: font-lock
// tab-width: 4
// End:
?>
