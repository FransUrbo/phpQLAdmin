phpQLAdmin 2.0 Change Log

phpQLAdmin 2.0.9 - TO BE ANNOUNCED
	Highlights
	Bug fixes
	  - When ordinary user logs in, we don't know the domain.
	    Try to find it by traversing the DN backwards, looking
	    for attribute 'defaultDomain'.
	  - Use isset() instead of is_array() to get rid of
	    "Undefined variable ..." when running with E_NOTICE in
	    PHP4 config (error_reporting define).
	    + Instead of using define(), we have our own version of
	      this - pql_define() - that first check if the constant
	      is defined, and if it isn't it defines it. This to get
	      rid of 'Constant ... already defined' info if running
	      with E_NOTICE (error_reporting define).
	  - Include the domain in calls to user_{edit,add}_attribute
	    so we can find the default domainname. We need this,
	    because we need some domain defaults when changing attributes.
	  - Gecos is needed to do PAM/NSS LDAP login (ie, system
	    account), so construct the attribute from the fullname.
	  - Make sure we only include the language (en) file once.

	GUI layout change
	  - Dissalow the ezmlm frame if ordinary user.

	Misc changes

phpQLAdmin 2.0.8 Release (Jan 31 2003)
	Highlights
	  - utf8_{encode,decode}() 'Personal details' ('outlook' values etc) to correctly
	    catch national (ie, non-english) characters.
	  - Write protect user's top domain/branch.
	  - After we've fetched any configuration from the LDAP database' topmost DN,
	    we check if the user's DN is in the administrator attribute. If it is, we
	    allow domain/branch creation (ie, show the 'Add domain branch' URL).
	  - Allow for 'ordinary' users to login. They will only see there own name, no
	    domains etc. Filter out the edit links for the user. They should not be
	    allowed to edit some 'sensitive' information (loginshell, uid, mailbox/home
	    directory etc).

	Bug fixes
	  - LDIF example and documentation (README*) cleanup.
	  - OpenLDAP ACL example to allow 'dynamic' administrator access
	  - Don't use 'if(defined("PQL_LDAP_*"))' - false equals defined
	  - Duplicate 'owner' attribute for 'administrator' (removed SYNTAX/EQUALITY)
	    in schema.
	  - Filter out 'auto\.' from groups to allow user creation in.
	  - Don't get the domains TWICE (once when we start using pql_get_domain_value()
	    which verifies that we have access to the domain(s) and one using
	    pql_get_domain_value() which does no access control etc).
	  - Missing = in "form ... name=..." (user_add.php).
	  - If pql_get_domain_value() is called with something to search for ($match),
	    we have to use 'ldap_search()', othervise we use ldap_read() which do a
	    search with scope = BASE (only the current object).
	  - When deleting a user, remove all administrator references from all
	    domains/branches that lists the useras well.

	GUI layout change
	  - Only show a 'dropdown menu' if we can choose from more than one domain
	  - Only show the configuration edit/set links if we're administrator of/in the
	    topmost DN.
	  - Allow to make user administrator on the topmost DN (ie, create
	    domains/branches) in the user_details page.

	Misc changes
	  - Some files filtered through dos2unix to get rid of ^M
	  - Since the topmost DN now contain the administrator attribute, we must filter
	    that out when fetching domains, othervise we'd end up with the topmost DN
	    in domain/branch listing in the navigation frame...
	  - New function pql_validate_administrator() which checks a given DN for
	    existence of the administrator attribute, and if that contains the given
	    (user) DN.

phpQLAdmin 2.0.7 Release (Jan 28 2003)
	Bug fixes
	  - Correct usage of PQL_VERIFY_DELETE. Should have been '!PQL_VERIFY_DELETE'.
	  - When we're to delete a domain/branch, we retreive all organizationUnits (or
	    whatever) under the branch we're to delete. We then go through all these
	    entries, deleting them. The problem was that the subbranch was included
	    in this, so we ended up trying to delete the subbranch twice.
	  - Value 'value' was used else where, use 'set' instead (the attribute change
	    files already used this) when modifying (add/del) a QmailLDAP locals/rcpthosts
	    value.
	  - Only use 'add' or 'delete' actions when modifying a QmailLDAP locals/rcpthosts
	    value (add and delete IS a modify).
	  - Lowercase all attribute checks (so that switch/case combo works properly).
	  - Better description on how to set PQL_LDAP_CONTROL_AUTOADDLOCALS properly.
	  - Don't use 'if(defined(PQL_LDAP*))'. It won't work if it's FALSE.

	GUI layout change
	  - Reference the Administrator/Contact person with 'cn', not RDN.
	  - Better/more human readable description on the 'Personal details'.
	  - Rudimentary ACL tests - use attribute 'test' (bool) to check if it's ok
	    to modify values/attributes on the specific DN's (base/root DN and in
	    each domain/branch DN that exists in db).
	  - When changing a QmailLDAP controls object, don't redirect to domain details
	    page, go to the host's control details page instead.
	  - When adding a locals/rcpthosts value to the QmailLDAP controls object, don't
	    give all the previous values to add/remove nor show option to increase the
	    count (adding more input fields etc).
	    If we're adding a value, one single value should be added! The delete option
	    is availible through it's own URL through the control_details page.

	Misc changes
	  - Functions pql_control_update_domains() and pql_get_domains() have change
	    somewhat. Send the full class initialization to functions, not just the
	    link ID.
	  - Different PQL_DOMAIN_INVALID dependening on PQL_LDAP_REFERENCE_DOMAINS_WITH.
	  - Filtered through dos2unix to get rid of ^M
	  - Function pql_control_update_domains() was rewritten to work with new
	    domain/branch/user reference system, and to allow for changing ALL QmailLDAP
	    server objects in one go and to get automatic locals update working (ie,
	    update locals when modifying defaultDomain for a branch, or when adding
	    a new domain/branch).
	  - Add homePostalAddress to 'Personal details' to manage.

phpQLAdmin 2.0.6 Release (Jan 24 2003)
	Bug fixes
	  - Calls to pql_email_exists(), pql_user_exist(), pql_get_mx() and
	    pql_modify_userattribute() was called with the wrong/wrong number
	    of parameter due to redesign of how domains/branches and users where
	    references but code within functions wasn't changed fully.
	  - Get the Administrator/SeeAlso values correctly.
	  - Add UID and GID number (along with homedirectory=/tmp) by using the
	    'posixAccount' objectclass when we create a Forwarding account.
	  - Include the domain to the 'subbranch' variable so we get the full path
	    to where the user should be created (got problems with/without ADVANCED
	    mode etc) in the user_add page.
	  - Include the domain/branch in the url when deleting a user (so we get
	    redirected correctly).
	  - Add forwardUIDNumber (PQL_LDAP_FORWARDINGACCOUNT_UIDNUMBER define)
	    to objectclass phpQLAdminConfig so we can have the same (configurable)
	    UID/GID number for forwarding accounts.
	  - Don't destroy the session if we can't bind. For some reason, every now
	    and then I'll get logged out for no apparent reason... This is a TODO.

	GUI layout change
	  - Test for 'required' objectclasses in the LDAP test page.
	  - Show the old Main address above the new as a reference, not INSIDE
	    the input box.

	Misc changes
	  - Link the administrator user to the user details page in the same
	    way we do with 'Contact person'.

phpQLAdmin 2.0.5 Release (Jan 23 2003)
	Bug fixes
	  - In same cases, when playing with the PQL_LDAP_EZMLM_USE and/or
	    PQL_LDAP_CONTROL_USE values, a frame was created when it wasn't
	    supposed to, and vise versa.
	  - In some cases (non advanced mode, creating 'Mail account' amongst
	    others, no default domainname in the branch object) will render
	    the mailHost value empty. Before we save, we test if the value is
	    set one last time. If it isn't, and we have no MX pointer, we get
	    a NEW MX value from the email address.
	    + I had code that did that at the top, so move that into a separate
	      function pql_get_mx() that we can call at will.
	  - Allow for deletion of the mail reply text.
	  - If there's only one host, show that (CORRECTLY) on the login page.
	  - Call pql_domain_exist() with only the branch name, not the DN.
	    + Had to rewrite it so that it adds 'dc=' (dc configurable with
	      PQL_LDAP_ATTR_DOMAIN define) as prefix to the branch in the
	      search for existing domain/branch. Search from each base DN.
	  - Call pql_domain_exist() with only the branch name, not the DN to
	    correctly find if the branch exists.
	  - Bug fixes in pql_set_domain_value() to get it working with saving
	    config in the base DN object. 
	    + Make sure the object contains the object class 'phpQLAdminBranch'
	      by doing a search, checking each object class, and if not found
	      in object, add the objectclass (and all previous objectclasses)
	      to the entry before doing a modify.
	  - Wrong SYNTAX in the BOOL phpQLAdminConfig attributes.
	    + OID numbers changed
	    + Objectclass name changed (from phpQLAdmin to phpQLAdminConfig)
	    + Removed attribute ldapHost. What's the point!?
	    + Add 'language' attribute
	    + Add 'branchReference' attribute
	  - Tripple check that we have an MX (userHost attribute) before creating
	    the user.
	  - Case insensitive search for {KERBEROS} when showing user details.
	  - To make sure we really check for a define, we don't do "if(PQL_DEFINE)"
	    but use "if(defined(PQL_DEFINE))" which is correct. If the define wasn't
	    defined at all (ie, uncommented not just set to true/false etc) we'd get
	    an error with the first string...
	  - ./manual is the PHP/Apache manual!?!?! Remove it!
	  - Delete all directories named CVS recursivly and all files named .cvsignore
	    when doing a release tarball.

	GUI layout change
	  - Only show following information if ADVANCED_MODE is set (in the
	    'Show configuration values' page):
	        Password encryption schemes
	        User objectclasses
	        Domain objectclasses
	        Reference users with
	        Reference domains with
	    + Move 'LDAP {host,base dn,control base dn}' etc to the top (more
	      important).
	  - Small function - pql_get_subbranch() - to get any
		'objectclass=organizationalUnit'
	    below our search DN's. If finding more than one, show a select box
	    when specifying MX for the new user with the sub branches and as
	    where to put the user.

	Misc changes
	  - A while ago I changed the way one specify LDAP server(s). There is
	    no separation (unfortunatly ?) between USER server and CONTROLS
	    server. We only have one host value. Therefor change all occurances
	    of USER_HOST_{USR,CTR} to just USER_HOST.
	  - Completly redesigned how LDAP objects (users, domains etc) are
	    referenced. 
	    To make sure that we don't mix similarly named users in different
	    RDN's, we reference them with there full RDN. This forced almost
	    all functions in the API to change how they are called. We don't
	    need the 'basedn', because there is none. Also, most of the time
	    the 'domain' variable was used to build the DN where we did searches
	    from. This is no longer needed, since the 'domain' is now the RDN
	    of the domain, instead of just a fraction of it.
	    + Find the base dn(s) in the LDAP server at class initialization
	      time with the private function _find_basedn(). This information
	      is then availible through the global class variable 'ldap_basedn'
	      which we have to cyckle through when needed.
	  - Removed all references to the search dn (USER_SEARCH_DN_USR and
	    GLOBALS["USER_SEARCH_DN_USR"])
	  - Renamed some functions
	  - Run files through 'dos2unix' to remove ^M
	  - Add the two 'new' objectclasses (dcOrganizationNameForm and
	    phpQLAdminBranch) in the PQL_LDAP_OBJECTCLASS_DOMAIN define. This
	    will let us make it configurable at runtime later...
	  - New function pql_get_subschema() that retreives specific entries
	    from the 'cn=Subschema' (or whatever is defined in the subschemaSubentry
	    at base ''). 
	    + Using the wrapper function pql_get_subschemas() we can get ALL
	      interesting values (ldapsyntaxes, matchingrules, attributetypes and
	      objectclasses) in one go.
	    + The intention of this is to be able to configure what attributes to
	      use when creating users and/or branches. To make sure each MUST is
	      fullfilled, we (phpQLAdmin) must know which MUST belong to which
	      object class (only the LDAP can tell us the truth, the whole truth
	      and nothing BUT the truth).
	  - When deleting the domain branch, don't check for PQL_LDAP_SUBTREE_GROUPS.
	    Search for a group with the gidNumber of the user and objectclass=posixGroup.
	    If found, just delete it. Also, search for sub branches (objectclass=organizationalUnit)
	    under the domain branch. If anyone found, find all objects and delete
	    them (including the organizationalUnits).
	    + Removed pql_get_group() since it's no longer needed.
	  - Changed how pql_get_mx() works. If we can't find an MX for the domain in
	    the DNS system, look for a qmailControls object that lists this domain
	    in their locals/rcpthosts attribute field.
	  - Allow for configuration changes to be saved in the LDAP database (in
	    the first Base DN). Ship with 'reasonable defaults', site specifics
	    is changed in the web interface and save in the base dn. This give us
	    the possibility to have different configuration for different LDAP
	    hosts.

phpQLAdmin 2.0.4 Release (Jan 14 2003)
	Bug fixes
	  - Got ezmlm mailing list management to work, stress tested it localy,
	    "works for me"... :)
	    + Part of the fix is to have two suidperl script that does a fiew
	      things the webserver/PHP don't have access to. We need to create
	      some directories as root and give away files/directories to the
	      mailing list user - usually 'alias'.
	  - Correctly export environment variables before executing external
	    script.
	  - Correctly get domain default values/administrator (missed some when
	    I changed to my own object class).
	  - Code cleanup. More debug options availible if changing the code.
	  - Fixed the search page so that it to can distinguish from DOMAIN
	    layout or ORGANIZATION layout... Never used the funtion until now :)

	GUI layout change
	  - Left justify the locals/rcpthosts tables in the mailserver control
	    details page.
	  - Allow for creating a script that initializes ldap* files on a new
	    mail server (example script included).
	  - Readd the choosing of the LDAP server in the first login page (only
	    availible if there's multiple servers defined though).

	EZMLM Mailinglist management
	  - Only build the ezmlm frame list tree if there is any lists, and if
	    there isn't any, show 'no lists' as indicator.
	  - Print status message at top of ezmlm details page if there is any.
	  - Add the 'add subscriber' link at the bottom of the 'show list information'
	    table even if there is no existing subscribers.

	Misc changes
	  - Working example of suidperl script 'create_domain.pl' (creates the
	    'baseMailDir/mailinglists' directory - needs to be done as root).
	  - Force usage of objectclass 'phpQLAdminBranch' and 'dcOrganizationNameForm'
	    when creating the domain/branch object.

phpQLAdmin 2.0.3 Release (Jan 13 2003)
	Bug fixes
	  - Documentation update
	  - Missed some include($include) line (prefix with './include/').
	  - Foundation for changing LDAP server(s). If we can't connect/bind
	    to the LDAP server, this must mean we changed server, and we need
	    to reauthenticate. 
	  - The 'Advance mode' checkbox should reload index2.php, not self,
	    and send it to _top.
	  - Fixed the 'are you sure you want to delete ...'. Isn't outputted
	    when PQL_VERIFY_DELETE is true, so I missed this :)
	  - Forgot to increase the created UID Number with one, so we ended up
	    with the same number as the highest one in the database.
	  - Don't build the email@domain TWICE, and the variable is called
	    '$mail', not '$email'!
	  - Make sure we only include the config file (include/config.inc)
	    ONCE (with a simple if() at the top).
	  - Correctly reference the LDAP branch as 'branch' or 'domain'
	    depending on what type of database layout we're using.
	  - If we couldn't bind to the LDAP server, destroy and unset the
	    session completly.
	  - Delete the users group object after we created the user object.

	EZMLM Mailinglist management
	  - EZMLM Manager class(es) removed. Re-implemented what I needed
	    in my own 'include/pql_ezmlm.inc'.
	  - Possibility to set path/command for ezmlm management (should be
	    possible to use scripts/commands that do remote administration).
	  - Search all 'baseMailDirs' for accessible domain (ie, domain tree
	    one have access to) for ezmlm lists. This gives that each domain
	    have lists in there own directory, instead of every single list
	    in something like /var/lists.

	GUI layout change
	  - 'Tablify' the home links (original/new maintainers etc).
	  - Show what user to modify in user_edit_attribute, so we don't
	    modify 'in the blind'.
	  - Show more information
	    + Allow change of LDAP server [y/n]
	    + Verify user/domain deletions [y/n]
	    + Objectclasses used to create users
	    + Domain/Users reference attribute (uid/cn, dc/ou etc)
	    + Domain/Branch owner (telephone number, Contact person etc) in
	      the domain details view.
		Uses the objectclass 'dcOrganizationNameForm' (schema file
		included)
	    + Personal details (telephone number, cell phone etc) in the
	      user details view.
		Uses the objectclass 'pilotPerson'.
	  - Add delete icon/func to each attribute view in the mail server
	    controls view.
	  - Separate form page to create new branch/domain.
	  - Only create the 'controls' and/or 'ezmlm' frames if either of
	    the PQL_LDAP_CONTROL_USE or PQL_LDAP_EZMLM_USE is enabled. It
	    looked funny when both where disabled...
	  - Slightly more information on the 'front page'.
	    - Version number is displayed in bold at the top
	    - Link to CHANGES and the new phpQLAdmin page

	Misc changes
	  - Replace/Modify 'gecos' and 'givenName' entries at the same time
	    we're modifying the 'cn' entry.
	  - Action to create and delete a mailserver. When adding a new
	    mailserver, if we clone an existing one, include all
	    {locals,rcpthosts,passwd} info in clone (configurable with
	    checkboxes).
	  - Enable execution of external add user/domain scripts. Two example
	    scripts is included.
	  - Reasonable zone file creation template included and correctly called.
	  - Use specific attributes to store domain/branch default values and
	    domain/branch administrator. Schema file (phpQLAdmin.schema included).
	    This will break an upgrade - read README.upgrade!!

phpQLAdmin 2.0.2 Release (Jan  4 2003)
	- Documentation update
	
phpQLAdmin 2.0.1 Release (Jan  3 2003)
	- More independent LDAP database layout. The admin interface
	  should not dictate how a database should look like (or vise
	  versa for that matter!). The admin interface should cope with
	  ANY layout possible. First attempt (it works with mine now :)
	- GUI layout change.
	  + Left frame in three sub frames - Users, Controls and Ezmlm,
	    each reloaded independently when changed.
	  + Sort MX on priority, not FQDN
	  + The nav button (left/right icon) only folds/unfolds the
	    level, nothing more!
	  + Add a 'delete user' at the bottom of the user details page,
	    so that we don't have to go through the domain details to
	    delete a user.
	- Configure domain defaults in the domain objects description
	  attribute.
		Example:
		dn: dc=bayour,dc=com
		objectClass: top
		objectClass: domain
		dc: bayour
		description: defaultDomain=bayour.com
		description: baseHomeDir=/afs/bayour.com/user/users/
		description: baseMailDir=/var/mail/users/
		description: administrator=uid=turbo,ou=People,dc=fredriksson,dc=com
		description: administrator=uid=khaan,ou=People,dc=bayour,dc=com
	  + Don't show the domain if person login in in isn't listed in the
	    object.
	  + Insert base values in the database for these when creating
	    a domain.
	  + Change these values on the domain details page.
	- Use authentication to access page(s) - session management.
	  This lead to the removal of the hard coded values for admin
	  DN and password. Access to database branches is through the
	  domain object and it's "description" field - administrator.
	  + Allow for 'Advanced mode' which gives more information. This so that
	    we can show simple (required) stuff for 'inexperienced administrators',
	    and all the nitty gritty to the pro.
	  + Log each login/logout in ./phpQLadmin.log.
	- Ezmlm mailing list management. Create and modify a ezmlm mailing list.
	  + Look for lists in baseMailDir/mailinglists for each domain
	  + Actual action is disabled by default. Set 'ezmlm->debug = 0' if you
	    want to test this. WARNING: HAVE NOT BEEN TESTED LIVE! It just _LOOKS_
	    correct!! I take no responsibility for lost mailing lists!
	- Controls management sorted on host (ie, multiple hosts is
	  manageable) in a tree like fashion.
	- Search for files in current dir 'require("./'. This so that
	  we can have multiple installations on same host, with
	  different configs etc.
	- Configure the LDAP host, port and base search DN in one go,
	  separated with semicolon (;). This saves us some variable
	  + This will allow choosing from a predefined set of LDAP
	    hosts at runtime (independent server choosing for user
	    and controls database).
	    This isn't quite working though. We most likely don't have
	    the same credentials on both servers.
	- Allow for selecting login shell when creating user (open /etc/shells
	  and output list to choose from).

phpQLAdmin 1.1 Release
	This is the latest version the original author released before
	development seized.

	+ added search option (many thanks to Alex A. Beeck)
	+ added the attributes qmailDotMode and deliveryProgramPath to
	  users options
	+ added option to test the ldap connection
	+ fixed various linking bugs in user_detail.php

phpQLAdmin 1.0 Release
	+ support for qmail-ldap/control patch, which allows to control
	  all qmail configuration stuff in a ldap database
	+ help system for control values, English only (many thanks to
	  Henning Brauer for permission to take these texts from 'life
	  with qmail-ldap', others are taken from the qmail man pages)
	+ support for non-salted MD5 and SHA password encryption
	+ showing configuration of phpQLAdmin
	+ better error reporting on failures
	+ fixed bug in adding domain: now supports subdomains as well
	+ fixed bug in navigation bar: user_detail.php was not correctly
	  linked (didn't affects to apache with activated multi views option)
	+ now refusing values equal 0 at setting quota
	+ various little bugs fixed 

	New available language support:
	+ added Japanese language support (many thanks to Swen Veckes) 
	+ added Portuguese language support (many thanks to Alex A. Beeck) 

phpQLAdmin 0.9beta (2nd) Release
	+ added Italian language file (many thanks to Luca Pescatore)
	+ tar.gz file fixed (all files are now in a subdirectory)

phpQLAdmin 0.9beta (1st) Release
	First public release
