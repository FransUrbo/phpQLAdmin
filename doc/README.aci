* As of version 2.0.17, phpQLAdmin supports per-object ACIs. An
  ACI looks something like this (example from the openldap-software list)

  3#entry#grant;r,s,c;macAddress;s,c;[all]#group#cn=customer,ou=groups,dc=planetsky,dc=com

* This consist of the following, see
  http://www.openldap.org/faq/index.cgi?file=634

   OID # SCOPE # RIGHTS # TYPE # SUBJECT
   OID:		Ignored. Usually used as counter.

   SCOPE:	Only 'entry' (currently) works.

   RIGHTS:	ACTION ; PERMISSION ; TARGET
		ACTION:		Either 'grant' or 'deny'.
		PERMISSION:	Can be any combination of OpenLDAP permissions:
				w(rite), r(ead), s(earch), and/or c(ompare)
		TARGET:		Comma separated list of:
				attribute:	Attribute in question (but not the object itself)
				[all]:		All attributes in the object
				[entry]:	The object itself, but no attributes
				[children]:	Sub-objects (only write is meaningfull)

		Ex: grant;r,s,c;cn,givenname,[entry]
		    grant;r,s,w,c;[all]

   TYPE:	One of the following:
		access-id:	DN of a subject
		public:		Public (world readable)
		self:		DN matching the object itself
		group:		DN of a group

		Undocumented types:
		anonymous:	
		users:		
		dnattr:		
		role:		

   SUBJECT:	DN of object.

* To use per-object ACIs, one must use the 'openLDAPacl' object class and
  the attribute is named 'openLDAPaci'. Also, the OpenLDAP sources have
  to have --enable-aci added to the configure line when compiling the
  sources. See the URL above for a object example with ACIs.
  - OpenLDAP does not ship with a object definition for the openLDAPacl
    objectclass, but here's an example:

	# The attribute 'OpenLDAPaci' is internally defined
	# as OID 1.3.6.1.4.1.4203.666.1.5.
	objectclass ( 1.3.6.1.4.1.10755.1.2.1.6
	        NAME 'OpenLDAPacl'
	        DESC 'OpenLDAP access control information'
	        SUP top STRUCTURAL
	        MUST objectClass
	        MAY  OpenLDAPaci )

  - Unfortunatly it seems like this isn't loadable without modifications
    to the ldap server (slapd) sources. I had to modify the EQUALITY of
    the attribute 'OpenLDAPaci' (defined in the file servers/slapd/schema_prep.c
    of the OpenLDAP v2.1 sources). In my version (2.1.22) the line 685
    had to be modified ('EQUALITY OpenLDAPaciMatch' had to be replaced
    with 'EQUALITY caseIgnoreIA5Match').

  - NOTE: As of OpenLDAP version 2.1.22, loading the object class above
          is not necessary, it is hardcoded into the code itself.

* To add the basic ACIs to all objects in your database, you can use the
  perl script named 'add_aci_support_to_all_objects_in_database.pl' in
  this directory. Modify it before use (the top few lines). It will
  retreive ALL (!) objects in your database below the specified base
  DN(s).

  To make this perform the best, remove _ALL_ ACLs you have configured
  and replace it with 'access to * by * write' temporarily. This will
  make the database world writable, so make sure noone else can access
  it while you're working on it.

  The script will output an LDIF which you can pipe to ldapmodify, like
  this:

	./add_aci_support_to_all_objects_in_database.pl | ldapmodify

  When the database has been modify, you can restore you old ACLs.
  But since you now have ACI support (if that's compiled into the
  LDAP server that is!), you can remove ALL entries which specify
  your dn, and replace them with 'access to <what> by aci write'.

  Such as:
	access to attr=userPassword
		by dn="cn=Turbo Fredriksson,ou=People,o=Fredriksson,c=SE" write
		by anonymous auth

  but instead:

	access to attr=userPassword
		by aci write
		by anonymous auth
