Webserver configuration
~~~~~~~~~~~~~~~~~~~~~~~
As of 2.0.17, phpQLAdmin have rudimentary support for having (part of)
the webserver configuration in the LDAP server. This isn't the
pretties solution, but it's something. The included example script
(scripts/create_websrv_cfg.pl or scripts/extract_webserver_objects.pl)
will create all the <VirtualHost> definitions which can then be
included with the Include option in your main Apache configuration
file (httpd.conf).  The script is intended to run as a cron job every
now and then (once every hour sounds resonable) to create the
<VirtualHost> file.

Since I'm stuck with Apache 1.3 for a little while longer, I'm forced
to use the module 'mod_ldap_cfg' (availible at the URL
http://www4.ncsu.edu/~bdferris/) which I have been unsuccessful to
get working - Apache segfaults just after loading all the virtual hosts
from the LDAP database.

Brian Ferris seems to have quit/graduated from NCSU and his page(s)
have been removed the documentation for the module with it...  I
however managed to save the tarball on my own site
(http://phpqladmin.bayour.com/mod_ldap_cfg-turbo.tar.gz) if someone
can manage to get it working (I'm currently having a chat on the
apache-modules list about this).


As of 2.1.5, I have desided to fully support this module instead of my
own schema hack. This even though I couldn't get it working. It's the
only module that seems resonable and have enough options to be
usefull. If you're upgrading from a phpQLAdmin earlier than 2.1.5 and
have created webserver objects (look in your database with the search
string 'objectClass=phpQLAdminWebSrv'), you will have to delete them
and create new in the new format. The rest of this file now describes
the _new_ object format...

phpQLAdmin can't (at the moment) handle ALL the values possible, but
the most common (i.e. the ones _I_ use/need :).

This is an example LDIF, showing ONE vhost, using MY objectclass
(phpQLAdminWebSrv):
----- s n i p -----
dn: cn=testing.bayour.com,ou=WEB,o=Bayour.COM,c=SE
objectClass: device
objectClass: ApacheSectionObj
objectClass: ApacheVirtualHostObj
objectClass: ApacheModLogConfigObj
cn: testing.bayour.com
ApacheSectionName: VirtualHost
ApacheSectionArg: 192.168.1.4
ApacheServerName: testing.bayour.com
ApacheDocumentRoot: /var/www/testing
ApacheServerAdmin: turbo@bayour.com
ApacheErrorLog: /var/log/apache/testing_error.log
ApacheTransferLog: /var/log/apache/testing_access.log
----- s n i p -----

This will create a vhost entry that looks like:
----- s n i p -----
<VirtualHost 192.168.1.4>
        ServerName testing.bayour.com
        DocumentRoot /var/www/testing/
        ErrorLog /var/log/apache/testing-error.log
        TransferLog /var/log/apache/testing-trans.log
        ServerAdmin turbo@bayour.com
</VirtualHost>
----- s n i p -----
